@model AspNetCoreNHibernate.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model =>
              model.Category.Id,
              selectList: ViewBag.Categories as IEnumerable<SelectListItem>,
              htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Category.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.Audit.Inserted)

    <div class="form-group">
        @Html.LabelFor(model => model.Suppliers, nameof(Product.Suppliers), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="ViewSuppliers[]"
                    class="multiple-dropdown"
                    multiple="multiple"
                    style="width: 100%">
                @{
                    foreach (var item in ViewBag.Suppliers as IEnumerable<Supplier>)
                    {
                        @if (Model.Suppliers.Select(p => p.Id).Contains(item.Id))
                        { <option selected value="@item.Id">@item.Name</option> }
                        else
                        { <option value="@item.Id">@item.Name</option> }
                        }
                 }
            </select>

        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.multiple-dropdown').select2({
                placeholder: 'Select many suppliers'
            });
        });
    </script>
}